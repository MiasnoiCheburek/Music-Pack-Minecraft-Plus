debug.musictriggers.channel.song=Channel[%1$s] Song: Name = %2$s | Time = %3$s
debug.musictriggers.channel.trigger=Channel[%1$s] Triggers: Active = %2$s | Playable = %3$s
debug.musictriggers.header=Music Triggers Debug Information
debug.musictriggers.other.blocked.mods=Blocked Mods: [ %1$s ]
debug.musictriggers.other.blocked.mod=ID = %1$s | Categories = %2$s
debug.musictriggers.position.biome=Biome: Name = %1$s | ID = %2$s |  Tags = %3$s
debug.musictriggers.position.dimension=Dimension: Name = %1$s | ID = %2$s
debug.musictriggers.position.light=Light: Block = %1$s | Sky = %2$s | Total = %3$s
debug.musictriggers.position.structure=Structure: Name = %1$s | ID = %2$s
debug.musictriggers.status.effects=Active Effects: [ %1$s ]
debug.musictriggers.status.effect=Name = %1$s | ID = %2$s
debug.musictriggers.target.block_entity=Block Entity: Name = %1$s | ID = %2$s
debug.musictriggers.target.entity=Entity: Name = %1$s | ID = %2$s

gui.musictriggers.button.back.name=Back
gui.musictriggers.button.channel_info.name=Channel Info
gui.musictriggers.button.channel_info.tooltip.1=Edit channel specific parameters
gui.musictriggers.button.channels.name=Channels
gui.musictriggers.button.channels.tooltip.1=Edit channel info, commands, records, redirects,
gui.musictriggers.button.channels.tooltip.2=render cards, songs, and triggers
gui.musictriggers.button.commands.name=Commands
gui.musictriggers.button.commands.tooltip.1=Add, edit, or remove command events
gui.musictriggers.button.commands.tooltip.2=All commands are executed by the server
gui.musictriggers.button.debug.name=Debug
gui.musictriggers.button.debug.tooltip.1=Edit debug parameters
gui.musictriggers.button.debug.tooltip.2=A restart may be required for some changes to apply
gui.musictriggers.button.help.name=Help
gui.musictriggers.button.help.tooltip.1=Tips, tricks, and useful links
gui.musictriggers.button.jukebox.name=Custom Music Discs
gui.musictriggers.button.jukebox.tooltip.1=Add, edit, or remove custom music disc entries
gui.musictriggers.button.log.name=Log Visualizer
gui.musictriggers.button.log.tooltip.1=Displays a filterable, in-game visualization of the log
gui.musictriggers.button.log.tooltip.2=Log entries are mirrored from logs/mods/musictriggers.log
gui.musictriggers.button.main.name=Main
gui.musictriggers.button.main.tooltip.1=Add, edit, or remove songs & triggers
gui.musictriggers.button.main.tooltip.2=Songs that have triggers which aren't defined will be implied
gui.musictriggers.button.main.tooltip.3=See the wiki for a more detailed explanation of the implied trigger system
gui.musictriggers.button.playback.name=Playback
gui.musictriggers.button.playback.tooltip.1=Shows the time and name of the currently playing song
gui.musictriggers.button.playback.tooltip.2=Allows the current song to be skipped or reset
gui.musictriggers.button.redirect.name=Redirects
gui.musictriggers.button.redirect.tooltip.1=Add, edit, or remove redirect entries
gui.musictriggers.button.redirect.tooltip.2=Redirects may point to external URLs or in-game resources
gui.musictriggers.button.reload.name=Reload
gui.musictriggers.button.reload.tooltip.1=Reloads all config files unless there are GUI changes to apply
gui.musictriggers.button.reload.tooltip.2=Edits made via text will be overwritten when applying GUI changes
gui.musictriggers.button.reload.tooltip.3=Exiting the GUI will clear any queued changes
gui.musictriggers.button.renders.name=Renders
gui.musictriggers.button.renders.tooltip.1=Add, edit, or remove render entries
gui.musictriggers.button.renders.tooltip.2=Current renders refer to image cards & title cards
gui.musictriggers.button.reset_song.name=Reset Song
gui.musictriggers.button.reset_song.tooltip.1=Restart the currently playing song from the beginning
gui.musictriggers.button.skip_song.name=Skip Song
gui.musictriggers.button.skip_song.tooltip.1=Skip the currently playing song
gui.musictriggers.button.skip_song.tooltip.2=Does not skip any delay parameters that are set
gui.musictriggers.button.toggles.name=Toggles
gui.musictriggers.button.toggles.tooltip.1=Add, edit, or remove toggle entries
gui.musictriggers.button.toggles.tooltip.2=Toggles can be used to set the state of triggers or channels

gui.musictriggers.screen.channel_info=Channel Info
gui.musictriggers.screen.channels=Channels
gui.musictriggers.screen.commands=Commands
gui.musictriggers.screen.debug=Debug
gui.musictriggers.screen.help=Help
gui.musictriggers.screen.home=Music Triggers Home
gui.musictriggers.screen.jukebox=Custom Music Discs
gui.musictriggers.screen.log=Log Visualizer
gui.musictriggers.screen.main=Main
gui.musictriggers.screen.playback=Playback
gui.musictriggers.screen.redirect=Redirects
gui.musictriggers.screen.renders=Renders
gui.musictriggers.screen.toggles=Toggles

help.musictriggers.implied_triggers.desc=The implied trigger system is a way for most objects that have a `triggers` parameter (audio, commands, toggles, etc) to automatically register any of their triggers that have not been explicitly defined. Explicitly defined in this case means being added to the triggers section in the main config of the channel. If the trigger requires an identifier the system will try to use the identifier to "imply" the required parameters for that trigger. Some triggers with multiple required parameters may not be supported by the implied trigger system. Parameters that are not implied (fade_in, fade_out, persistence, etc) will be default unless otherwise specified via the universal trigger. Triggers must be explicitly defined if any non-universal or non-standard parameters are required.
help.musictriggers.implied_triggers.name=Implied Triggers

item.musictriggers.record.blank=Nothing has been recorded yet
item.musictriggers.record.desc=Enhanced Music Disc
item.musictriggers.record.name=Enhanced Music Disc
item.musictriggers.record.tooltip=Reference: %1$s

key.categories.musictriggers=Music Triggers
key.musictriggers.gui=Open Music Triggers GUI

message.musictriggers.reload.error=Caught an unknown error in channel %1$s
message.musictriggers.reload.finished=Finished reloading Music Triggers!
message.musictriggers.reload.queue=Reloading Music Triggers in %1$s tick(s)...

parameter.musictriggers.active_cooldown.desc=Determines the number of ticks that the trigger will not be able to activate for after being active and deactivating. <default: 0>
parameter.musictriggers.active_cooldown.name=Active Cooldown
parameter.musictriggers.allow_timestamps.desc=Allows the debug info to display the timestamp for currently playing audio from all channels. <default: false>
parameter.musictriggers.allow_timestamps.name=Allow Timestamps
parameter.musictriggers.biome_rainfall.desc=The rainfall of the biome must pass a comparison with this number according to the rainfall_greater_than parameter. <default: 1.4e-45f>
parameter.musictriggers.biome_rainfall.name=Biome Rainfall
parameter.musictriggers.biome_tag.desc=The category or tag (depending on the version of the game) of the current biome must match one of the entries here according to the strategy specified by the biome_tag_matcher parameter. <default: default: [ "any" ]>
parameter.musictriggers.biome_tag.name=Biome Tag
parameter.musictriggers.biome_tag_matcher.desc=Determines the matching strategy for the biome_tag parameter. Accepts exact, partial, or regex. | exact = The biome_tag must match exactly | partial = The biome_tag is allowed to partially match | regex = The biome_tag is treated as a regex expression | <default: exact>
parameter.musictriggers.biome_tag_matcher.name=Biome Tag Matching Strategy
parameter.musictriggers.biome_temperature.desc=The temperature of the biome must pass a comparison with this number according to the temperature_greater_than parameter. <default: 1.4e-45f>
parameter.musictriggers.biome_temperature.name=Biome Temperature
parameter.musictriggers.block_sound_effects.desc=Determines whether sound effects (non-streaming audio) should be blocked in addition to music files for the categories blocked by the blocked_sound_categories parameter. <default: false>
parameter.musictriggers.block_sound_effects.name=Block Sound Effects
parameter.musictriggers.blocked_sound_categories.desc=Determines the sound categories from each mod that should be blocked from playing via the vanilla sound engine. <default: [ "minecraft;music" ]>
parameter.musictriggers.blocked_sound_categories.name=Blocked Sound Categories
parameter.musictriggers.chance.desc=The weighted chance of the audio being chosen when there are 2 or more entries in its song pool. Note that the same audio cannot be played twice in a row unless it is the only entry and that songs blocked by play_once are not factored into the total weight. Since this is weighted chance and not a percentage chance, the values do not have to add up to 100. The formula is chance/totalChance where totalChance is all of the chance values in the same song pool including this one added together. <default: 100>
parameter.musictriggers.chance.name=Weighted Chance
parameter.musictriggers.client_only.desc=RESTART REQUIRED - Attempts to only load the mod on the client side. Some triggers and features that require information from the server will not be able to function. <default: false>
parameter.musictriggers.client_only.name=Client Only
parameter.musictriggers.commands.desc=Determines the path to and name of the commands config file starting from `config/MusicTriggers/<channelname>/`. The <channelname> is dependent on the name of the channel. Do not include the file extension as it is already included automatically. <default: commands>
parameter.musictriggers.commands.name=Commands Path
parameter.musictriggers.display_matcher.desc=Determines the matching strategy for the display_name parameter. Accepts exact, partial, or regex. | exact = The display_name must match exactly | partial = The display_name is allowed to partially match | regex = The display_name is treated as a regex expression | <default: exact>
parameter.musictriggers.display_matcher.name=Display Matching Strategy
parameter.musictriggers.display_name.desc=The display name of the object must match one of the entries here according to the strategy specified by the display_matcher parameter. <default: [ "any" ]>
parameter.musictriggers.display_name.name=Display Name
parameter.musictriggers.enable_debug_info.desc=Enables the Music Triggers debug info displayed as lines of text in the top-left corner of the screen. Contains useful information for setting up triggers. <default: false>
parameter.musictriggers.enable_debug_info.name=Enable Debug Info
parameter.musictriggers.enable_discs.desc=RESTART REQUIRED - Determines whether the Enhanced Music Disc and Music Recorder will be registered. This parameter must be identical on both the client and server. <default: true>
parameter.musictriggers.enable_discs.name=Enable Discs
parameter.musictriggers.encoding_quality.desc=Determines the encoding quality for audio output across all channels. <default: 10>
parameter.musictriggers.encoding_quality.name=Encoding Quality
parameter.musictriggers.explicitly_overrides.desc=Determines whether the channel will only attempt to override audio from the vanilla sound engine for the sound category it is assigned to. See the `blocked_sound_categories` and `interrupted_sound_categories` debug parameters for more info. <default: false>
parameter.musictriggers.explicitly_overrides.name=Explicitly Overrides
parameter.musictriggers.fade_in.desc=The number of ticks it will take the first audio played by the trigger after activating to fade in. <default: 0>
parameter.musictriggers.fade_in.name=Fade In
parameter.musictriggers.fade_out.desc=The number of ticks it will take the audio to fade out when the trigger is no longer active. <default: 0>
parameter.musictriggers.fade_out.name=Fade Out
parameter.musictriggers.identifier.desc=A unique way to separate and identify multiple instances of a trigger holder. These have no bearing on parameters conditions and are strictly a way to group parameters together (unless the implied trigger system is used. See the help page for more info on that). For instance, a time trigger with an identifier of "night" would not be active during the night (night would need to be set for the time_bundle parameter) but it would be referenced elsewhere like time-night. Identifiers are specific to each trigger (biome-thing would be different than dimension-thing). Identifiers are required for every trigger holder and not allowed for other types of triggers. Identifiers can be any string values but it is recommended to keep them relevant to the function of the trigger. <default: not_set>
parameter.musictriggers.identifier.name=Identifier
parameter.musictriggers.independent_audio_pools.desc=If disabled, this allows audio pools to be combined when there are multiple playable triggers tied for the highest priority. <default: true>
parameter.musictriggers.independent_audio_pools.name=Independent Audio Pools
parameter.musictriggers.interrupted_sound_categories.desc=Determines the sound categories from which audio playing from the vanilla sound engine will be stopped or paused once audio from Music Triggers starts playing. <default: [ "music" ]>
parameter.musictriggers.interrupted_sound_categories.name=Interrupted Sound Categories
parameter.musictriggers.jukebox.desc=Determines the path to and name of the jukebox config file starting from `config/MusicTriggers/<channelname>/`. The <channelname> is dependent on the name of the channel. Do not include the file extension as it is already included automatically. <default: jukebox>
parameter.musictriggers.jukebox.name=Records Path
parameter.musictriggers.level.desc=The trigger dependent level (air, light, height, etc) that will be checked against. <default: difficulty=0,drowning=100,height=0,light=7,rainintensity=50,statistic=0,tornado=0>
parameter.musictriggers.level.name=Level
parameter.musictriggers.literal.desc=The command literal as it would be typed after /. <default: literally>
parameter.musictriggers.literal.name=Literal
parameter.musictriggers.local_folder.desc=Determines the folder the channel will read from when looking for local sound files. Folders paths can either start from the instance or be absolute. <default: config/MusicTriggers/songs>
parameter.musictriggers.local_folder.name=Local Folder
parameter.musictriggers.location.desc=Optional location for the audio file or redirect. Files should be specified using only the name without the extension or path. Redirects should be specified using only the key. The name of the audio object is used if unspecified. <default: _>
parameter.musictriggers.location.name=Location
parameter.musictriggers.main.desc=Determines the path to and name of the main config file starting from `config/MusicTriggers/<channelname>/`. The <channelname> is dependent on the name of the channel. Do not include the file extension as it is already included automatically. <default: main>
parameter.musictriggers.main.name=Main Path
parameter.musictriggers.max_tracks.desc=Determines the maximum number of audio tracks that will be able to play while the trigger is active. The counter is reset once the trigger is no longer active. Any value less than 1 will be treated as infinite. <default: 0>
parameter.musictriggers.max_tracks.name=Max Tracks
parameter.musictriggers.not.desc=Enabling this inverts the activation requirements meaing that the trigger will NOT be active when its parameters are met. Ignored by most time-based parameters. <default: false>
parameter.musictriggers.not.name=Not
parameter.musictriggers.overrides_music.desc=Determines whether the channel will attempt to override audio from the vanilla sound engine. See the `blocked_sound_categories` and `interrupted_sound_categories` debug parameters for more info. <default: true>
parameter.musictriggers.overrides_music.name=Overrides Music
parameter.musictriggers.passive_persistence.desc=Determines whether the persistence parameter should be applied when the trigger is not active. When disabled, the trigger will ignore its persistence parameter if there is a higher priority trigger active. <default: true>
parameter.musictriggers.passive_persistence.name=Passive Persistence
parameter.musictriggers.pause_unless_focused.desc=Pauses the game when focus is lost from the main window (when the Minecraft window is clicked off of or tabbed out of). <default: true>
parameter.musictriggers.pause_unless_focused.name=Pause Unless Focused
parameter.musictriggers.paused_by_jukebox.desc=Determines whether audio from the channel will be paused when there is an active jukebox in range. <default: true>
parameter.musictriggers.paused_by_jukebox.name=Paused By Jukebox
parameter.musictriggers.pauses_overrides.desc=Determines whether audio from the vanilla sound engine that gets interrupted by the channel will be paused or stopped. See the `interrupted_sound_categories` debug parameter for more info. <default: false>
parameter.musictriggers.pauses_overrides.name=Pauses Overrides
parameter.musictriggers.persistence.desc=Determines the number of ticks after its parameters are no longer met that the trigger will be playable for. <default: 0>
parameter.musictriggers.persistence.name=Persistence
parameter.musictriggers.pitch.desc=Flat percentage multiplier for pitch where 1 = 100. Yes I know that is not how pitch works, but this is hopefully temporary. <default: 1>
parameter.musictriggers.pitch.name=Pitch
parameter.musictriggers.play_normal_music.desc=Determines whether the vanilla sound engine is allowed to play blocked audio when there is no audio being played by Music Triggers. <default: false>
parameter.musictriggers.play_normal_music.name=Play Normal Music
parameter.musictriggers.play_once.desc=Integer based presets for determining what happens when the audio finishes playing. Accepts values from 0-5. | 0 = Inactive | 1 = The audio will not be allowed to play again until all songs in the pool have been played or the trigger is no longer active. | 2 = The audio will not be allowed to play again until the trigger is no longer active. | 3 = The audio will not be allowed to play until the player logs out of the world. | 4 = The audio will only play once for a world regardless of disconnects and restarts. | 5 = The audio will not be allowed to play until the game is restarted. | <default: 0>
parameter.musictriggers.play_once.name=Play Once
parameter.musictriggers.play_x.desc=Determines the number of times the audio must be played before the play_once parameter takes effect. Only positive values will be accepted. <default: 1>
parameter.musictriggers.play_x.name=Play X
parameter.musictriggers.priority.desc=The priority value of the trigger in regards to other triggers that are playable at the same time. By default the highest priority trigger always wins and will be active, but that can be changed via the debug config. See the independent_audio_pools and reverse_priority debug paremters for more info. For trigger combinations, nonspecific parameters like fade_out are taken from the highest priority trigger. <default: See the help page or wiki for default priority values>
parameter.musictriggers.priority.name=Priority
parameter.musictriggers.rain_type.desc=The type of percipitation a biome must have where "any" means any type including none. Accepts any, none, rain, or snow. <default: any>
parameter.musictriggers.rain_type.name=Rain Type
parameter.musictriggers.rainfall_greater_than.desc=Determines whether biome_rainfall will be the (inclusive) minimum or maximum value. <default: true>
parameter.musictriggers.rainfall_greater_than.name=Rainfall Greater Than
parameter.musictriggers.redirect.desc=Determines the path to and name of the redirect config file starting from `config/MusicTriggers/<channelname>/`. The <channelname> is dependent on the name of the channel. Do not include the file extension as it is already included automatically. <default: redirect>
parameter.musictriggers.redirect.name=Redirect Path
parameter.musictriggers.renders.desc=Determines the path to and name of the renders config file starting from `config/MusicTriggers/<channelname>/`. The <channelname> is dependent on the name of the channel. Do not include the file extension as it is already included automatically. <default: renders>
parameter.musictriggers.renders.name=Renders Path
parameter.musictriggers.resampling_quality.desc=Determines the resampling quality for audio output across all channels. <default: HIGH>
parameter.musictriggers.resampling_quality.name=Resampling Quality
parameter.musictriggers.resource_matcher.desc=Determines the matching strategy for the resource_name parameter. Accepts exact, partial, or regex. | exact = The resource_name must match exactly | partial = The resource_name is allowed to partially match | regex = The resource_name is treated as a regex expression | <default: partial>
parameter.musictriggers.resource_matcher.name=Resource Matching Strategy
parameter.musictriggers.resource_name.desc=The resource name or ID of the object must match one of the entries here according to the strategy specified by the resource_matcher parameter. <default: [ "any" ]>
parameter.musictriggers.resource_name.name=Resource Name
parameter.musictriggers.resume_on_play.desc=Determines whether the audio will continue where it left off if it is played multiple times during the same session. <default: false>
parameter.musictriggers.resume_on_play.name=Resume On Play
parameter.musictriggers.reverse_priority.desc=If this is enabled the trigger with the lowest priority will be active in the case of multiple playable triggers. Otherwise the highest priority trigger wins by default. <default: false>
parameter.musictriggers.reverse_priority.name=Reverse Priority
parameter.musictriggers.rotation_speed.desc=Allows the audio to sound like it is rotating around the player. The formula for rotation speed is sampleRate/(rotation_speed*2*PI). Setting this to around 0.1 is probably good but it may not be the same for all audio sources. <default: 0>
parameter.musictriggers.rotation_speed.name=Rotation Speed
parameter.musictriggers.show_channel_info.desc=Allows the debug info to display channel related information. <default: true>
parameter.musictriggers.show_channel_info.name=Show Channel Info
parameter.musictriggers.show_position_info.desc=Allows the debug info to display information related to the current position of the player. <default: true>
parameter.musictriggers.show_position_info.name=Show Position Info
parameter.musictriggers.show_song_info.desc=Allows the debug info to display audio related information from all channels. <default: true>
parameter.musictriggers.show_song_info.name=Show Song Info
parameter.musictriggers.show_status_info.desc=Allows the debug info to display information related to the current status of the player. <default: true>
parameter.musictriggers.show_status_info.name=Show Status Info
parameter.musictriggers.show_target_info.desc=Allows the debug info to display the current entity or block entity being targeted by the player. <default: true>
parameter.musictriggers.show_target_info.name=Show Target Info
parameter.musictriggers.show_trigger_info.desc=Allows the debug info to display trigger related information from all channels. <default: true>
parameter.musictriggers.show_trigger_info.name=Show Trigger Info
parameter.musictriggers.slow_tick_factor.desc=Determines how many ticks must occur for there to be a slow tick. The slow tick is where things that could potentially have a greater impact on performance such as trigger calculations and network syncs occur. <default: 5>
parameter.musictriggers.slow_tick_factor.name=Slow Tick Factor
parameter.musictriggers.sound_category.desc=Determines the sound category this channel will volume control from. The vanilla sound categories should be master, music, weather, hostile, player, voice, record, block, neutral, and ambient. Custom sound categories from other mods should work as well, but Music Triggers is unable to create new sound categories itself. <default: music>
parameter.musictriggers.sound_category.name=Sound Category
parameter.musictriggers.speed.desc=Percentage multiplier for the tempo at which the audio will play where 1 = 100. <default: 0>
parameter.musictriggers.speed.name=Speed
parameter.musictriggers.start_at.desc=Determines the time (in milliseconds) from which the audio will start at when playing from the beginning. Values greater than the length of the audio are ignored. <default: 0>
parameter.musictriggers.start_at.name=Start At
parameter.musictriggers.start_as_disabled.desc=If this is true the trigger will be toggled off by default and must be toggled on by something else to be usable. Unless you know how toggles work it is recommended to leave this at its default value. <default: false>
parameter.musictriggers.start_as_disabled.name=Start As Disabled
parameter.musictriggers.temperature_greater_than.desc=Determines whether biome_emperature will be the (inclusive) minimum or maximum value. <default: true>
parameter.musictriggers.temperature_greater_than.name=Temperature Greater Than
parameter.musictriggers.tick_rate.desc=RESTART REQUIRED - Determines the tick rate (ticks per second) for almost every part of the mod. Increasing this may allow for fading and looping to be smoother but may result in performance degradation and timing issues that were unaccounted for. <default: 20>
parameter.musictriggers.tick_rate.name=Tick Rate
parameter.musictriggers.ticks_before_active.desc=The number of ticks after the parameters are met before the trigger is active (or playable if not the highest priority). <default: 0>
parameter.musictriggers.ticks_before_active.name=Ticks Before Active
parameter.musictriggers.ticks_before_audio.desc=The number of ticks after the trigger is active before audio can start playing. <default: 0>
parameter.musictriggers.ticks_before_audio.name=Ticks Before Audio
parameter.musictriggers.ticks_between_audio.desc=The number of ticks after the audio finishes before the next entry in the pool can play. <default: 0>
parameter.musictriggers.ticks_between_audio.name=Ticks Between Audio
parameter.musictriggers.toggle_inactive_playable.desc=Determines whether the trigger should be toggled off when it is playable (all of its parameters and timers are met) but it is not the active (highest priority or in combination with the highest priority) trigger. Unless you have a good understanding of how toggles and trigger states work it is recommended to leave at its default value. <default: false>
parameter.musictriggers.toggle_inactive_playable.name=Turn Off Inactive Playble
parameter.musictriggers.toggle_save_status.desc=Determines if and how the toggle status for the trigger is saved and set. Accepts integers from 0-2. | 0 = Nothing is saved or set. Toggle status will reset after a restart. | 1 = Toggle status will reset after the player logs out. | 2 = Toggle status will reset after the player logs out and be set when the player logs back in. | <default: 0>
parameter.musictriggers.toggle_save_status.name=Toggle Save Status
parameter.musictriggers.triggers.desc=The trigger or triggers tied to this object. Note that when listing multiple triggers they must all meet the conditions. Triggers that are not explicitly defined will attempt to be implied by the trigger system. If you are looking for an OR condition you can add an identical entry with other triggers. <default: []>
parameter.musictriggers.triggers.name=Triggers
parameter.musictriggers.volume.desc=The decimal volume the audio will play at where 1 = 100. Values lower than 0.01 (after multiplying the category and master volumes) may be rounded down to 0. Supports values between 0-10 but going above 1 is not recommended. <default: 1>
parameter.musictriggers.volume.name=Volume
parameter.musictriggers.write_default_values.desc=Determines the name of the config file type or table that will write default values to the config. What this means is that whenever the config files are written to or loaded, any tables listed here that also have their parent table or file listed here will have all of its accepted parameters written out. Tables not listed here will not write parameters that match their default values. The debug config file will always have all of its parameters written out regardless of whether it is listed here. <default: [ "channel", "from", "image", "interrupt_handler", "main", "songs", "title", "toggle", "triggers", "universal_audio", "universal_triggers" ]>
parameter.musictriggers.write_default_values.name=Write Defualt Values

record.musictriggers.test_dragon=Hey cool it worked
record.musictriggers.test_math=Math???

selection.musictriggers.command_element.name=Command Entry
selection.musictriggers.image_element.name=Image Card Entry
selection.musictriggers.title_element.name=Title Card Entry
selection.musictriggers.toggle.name=Toggle Entry

tile.musictriggers.music_recorder.name=Music Recorder
tile.musictriggers.music_recorder.tooltip=Used to record audio onto Enhanced Music Discs

trigger.musictriggers.acidrain=Acid Rain
trigger.musictriggers.acidrain.desc=Playable during an acid rain weather event. Requires Better Weather.
trigger.musictriggers.advancement=Advancement
trigger.musictriggers.advancement.desc=Playable for 1 tick after an advancement has been granted. It is recommended to use the persistence parameter with this trigger.
trigger.musictriggers.advancement.id=Advancement-%1$s
trigger.musictriggers.adventure=Adventure
trigger.musictriggers.adventure.desc=Playable when the player is in adventure mode
trigger.musictriggers.biome=Biome
trigger.musictriggers.biome.desc=Playable when the biome at the current position of the player matches the specified parameters.
trigger.musictriggers.biome.id=Biome-%1$s
trigger.musictriggers.blizzard=Blizzard
trigger.musictriggers.blizzard.desc=Playable during a blizzard weather event. Requires Better Weather.
trigger.musictriggers.blockentity=Block Entity
trigger.musictriggers.blockentity.desc=Playable when there is a block entity close enough to the player that matches the specified parameters.
trigger.musictriggers.blockentity.id=Block Entity-%1$s
trigger.musictriggers.bloodmoon=Bloodmoon
trigger.musictriggers.bloodmoon.desc=Playable during a bloodmoon. Requires Bloodmoon, Nyx, or Enhanced Celestials.
trigger.musictriggers.bluemoon=Bluemooon
trigger.musictriggers.bluemoon.desc=Playable during a bluemoon. Requires Enhanced Celestials.
trigger.musictriggers.cloudy=Cloudy
trigger.musictriggers.cloudy.desc=Playable during a cloudy weather event. Requires Better Weather.
trigger.musictriggers.command=Command
trigger.musictriggers.command.desc=Playable for 1 tick after the command `/musictriggers player commandtrigger identifier` or `/mt player commandtrigger identifier` with an identifier that matches the set parameter is executed. It is recommended to use the persistence parameter with this trigger.
trigger.musictriggers.command.id=Command-%1$s
trigger.musictriggers.creative=Creative
trigger.musictriggers.creative.desc=Playable while the player is in creative mode.
trigger.musictriggers.dead=Dead
trigger.musictriggers.dead.desc=Playable while the player is dead.
trigger.musictriggers.difficulty=Difficulty
trigger.musictriggers.difficulty.desc=Playable when the current difficulty of the world matches the specified parameters.
trigger.musictriggers.difficulty.id=Difficulty-%1$s
trigger.musictriggers.drowning=Drowning
trigger.musictriggers.drowning.desc=Playable when the current air level of the player is below the specified threshold.
trigger.musictriggers.effect=Effect
trigger.musictriggers.effect.desc=Playable while the player has an active effect which matches the specified parameters.
trigger.musictriggers.effect.id=Effect-%1$s
trigger.musictriggers.elytra=Elytra
trigger.musictriggers.elytra.desc=Playable while the player is flying with an elytra
trigger.musictriggers.fishing=Fishing
trigger.musictriggers.fishing.desc=Playable while the player is fishing in water
trigger.musictriggers.gamestage=Gamestage
trigger.musictriggers.gamestage.desc=Playable when the player either has or does not have the specified gamestage depending on the specified whitelist.
trigger.musictriggers.gamestage.id=Gamestage-%1$s
trigger.musictriggers.generic=Generic
trigger.musictriggers.generic.desc=Playble only when there are no other playable triggers.
trigger.musictriggers.gui=GUI
trigger.musictriggers.gui.desc=Playble while a GUI matching the specified parameters is open
trigger.musictriggers.gui.id=GUI-%1$s
trigger.musictriggers.harvestmoon=Harvestmoon
trigger.musictriggers.harvestmoon.desc=Playable during a harvestmoon. Requires Nyx or Enhanced Celestials.
trigger.musictriggers.height=Height
trigger.musictriggers.height.desc=Playable when the Y position of the player is within the specified bound
trigger.musictriggers.height.id=Height-%1$s
trigger.musictriggers.home=Home
trigger.musictriggers.home.desc=Playable when the respawn position of the player for the current dimension is within the specified range.
trigger.musictriggers.hurricane=Hurricane
trigger.musictriggers.hurricane.desc=Playable when there is a hurricane within the specified range. Requires Weather, Storms, & Tornadoes.
trigger.musictriggers.inventory=Inventory
trigger.musictriggers.inventory.desc=Playable when there is a matching item in 1 or more specified slots of the player's inventory
trigger.musictriggers.inventory.id=Inventory-%1$s
trigger.musictriggers.light=Light
trigger.musictriggers.light.desc=Playable when the light level matches the specified parameters.
trigger.musictriggers.light.id=Light-%1$s
trigger.musictriggers.lightrain=Light Rain
trigger.musictriggers.lightrain.desc=Playable during an light rain weather event. Requires Better Weather.
trigger.musictriggers.loading=Loading
trigger.musictriggers.loading.desc=Playable while the game is loading after the client channels have been loaded and before the title screen is shown. Songs dependent on a redirect entry pointing to an in-game resource will not be able to play until after resources are loaded.
trigger.musictriggers.lowhp=Low HP
trigger.musictriggers.lowhp.desc=Playable when the percentage health percentage is below the specified threshold.
trigger.musictriggers.menu=Menu
trigger.musictriggers.menu.desc=Playable when the title screen is displayed before a world is loaded. GUI triggers will not work before a world is loaded
trigger.musictriggers.mob=Mob
trigger.musictriggers.mob.desc=Playable when there are enough entities within the specified range to fulfill the specified parameters.
trigger.musictriggers.mob.id=Mob-%1$s
trigger.musictriggers.moon=Moon
trigger.musictriggers.moon.desc=Playable when there is a custom moon that matches the specified parameters active. Requires Enhanced Celestials
trigger.musictriggers.moon.id=Moon-%1$s
trigger.musictriggers.pet=Pet
trigger.musictriggers.pet.desc=Playable when there is an entity tamed by the player in the specified range.
trigger.musictriggers.pvp=PVP
trigger.musictriggers.pvp.desc=Playable when the player attacks another player or is attacked by another player. It is recommended to use the persistence parameter with this trigger.
trigger.musictriggers.pvp.id=PVP-%1$s
trigger.musictriggers.raid=Raid
trigger.musictriggers.raid.desc=Playable when there is active raid at or above the specified wave near the player. Requires 1.16.5+
trigger.musictriggers.raid.id=Raid-%1$s
trigger.musictriggers.raining=Raining
trigger.musictriggers.raining.desc=Playable when it is raining in the current world.
trigger.musictriggers.rainintensity=Rain Intensity
trigger.musictriggers.rainintensity.desc=Playable when the intensity level of the rain is at or above the specified level. Requires Dynamic Surroundings.
trigger.musictriggers.rainintensity.id=Rain Intensity-%1$s
trigger.musictriggers.riding=Riding
trigger.musictriggers.riding.desc=Playable while the player is riding an entity that matches the specified parameters.
trigger.musictriggers.riding.id=Riding-%1$s
trigger.musictriggers.sandstorm=Sandstorm
trigger.musictriggers.sandstorm.desc=Playable when there is a sandstorm within the specified range. Requires Weather, Storms, & Tornadoes.
trigger.musictriggers.season=Season
trigger.musictriggers.season.desc=Playable during the specified season. Requires Serene Seasons.
trigger.musictriggers.season.id=Season-%1$s
trigger.musictriggers.snowing=Snowing
trigger.musictriggers.snowing.desc=Playable when it is snowing at the current position of the player.
trigger.musictriggers.spectator=Spectator
trigger.musictriggers.spectator.desc=Playable while the player is in spectator mode.
trigger.musictriggers.starshower=Star Shower
trigger.musictriggers.starshower.desc=Playable during a star shower event. Requires Nyx.
trigger.musictriggers.statistic=Statistic
trigger.musictriggers.statistic.desc=Playable when the specified statistic is higher than the specified threshold for the player.
trigger.musictriggers.statistic.id=Statistic-%1$s
trigger.musictriggers.storming=Storming
trigger.musictriggers.storming.desc=Playable when it is storming in the current world.
trigger.musictriggers.structure=Structure
trigger.musictriggers.structure.desc=Playable when the structure at the current position of the player matches the specified parameters.
trigger.musictriggers.structure.id=Structure-%1$s
trigger.musictriggers.time=Time
trigger.musictriggers.time.desc=Playble when the current time of day, day number, and moon phase all matche the specified parameters.
trigger.musictriggers.time.id=Time-%1$s
trigger.musictriggers.tornado=Tornado
trigger.musictriggers.tornado.desc=Playable when there is a tornado within the specified range that is at or above the specified level. Requires Weather, Storms, & Tornadoes.
trigger.musictriggers.tornado.id=Tornado-%1$s
trigger.musictriggers.underwater=Underwater
trigger.musictriggers.underwater.desc=Playable while the player is underwater.
trigger.musictriggers.victory=Victory
trigger.musictriggers.victory.desc=Playable when the targets of a mob or pvp trigger which has a victory_id parameter specified are killed. It is recommended to use the persistence parameter with this trigger.
trigger.musictriggers.victory.id=Victory-%1$s
trigger.musictriggers.zones=Zones
trigger.musictriggers.zones.desc=Playable while the position of the player is above the specified min values and below the specified max values
trigger.musictriggers.zones.id=Zones-%1$s