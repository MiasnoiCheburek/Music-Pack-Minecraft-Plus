//file:noinspection DependencyNotationArgument
//file:noinspection GroovyAssignabilityCheck
plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.+'
    id 'idea'
    id 'java'
    id 'java-library'
}

java.toolchain.getLanguageVersion().set(JavaLanguageVersion.of(17))
dependencies {
    shadow(project(':legacy:legacy.1_12'))
    shadow(project(':forge:forge.1_16'))

    //lavaplayer base
    shadow("com.github.walkyst:lavaplayer-fork:${lava_version}") { transitive = false }

    //lavaplayer dependencies
    shadow("${walkyst_repo}.JAADec-fork:jaadec-ext-aac:${jaadec_version}") { transitive = false }
    shadow("${walkyst_repo}:lavaplayer-natives-fork:${lava_natives_version}") { transitive = false }
    shadow("${lava_repo}:lava-common:${lava_version}") { transitive = false }
    shadow("${lava_repo}:lavaplayer:${lava_version}") { transitive = false }
    shadow("${lava_repo}:lavaplayer-ext-format-xm:${lava_version}") { transitive = false }
    shadow("${lava_repo}:lavaplayer-ext-youtube-rotator:${lava_version}") { transitive = false }
    shadow("${lava_repo}:lavaplayer-stream-merger:${lava_version}") { transitive = false }
    shadow("${lava_repo}:lavaplayer-test-samples:${lava_version}") { transitive = false }
    shadow("org.apache.httpcomponents:httpclient:${http_version}") { transitive = false }
    shadow("org.mozilla:rhino:${rhino_version}") { transitive = false }
    shadow("org.mozilla:rhino-engine:${rhino_version}") { transitive = false }
    shadow("org.slf4j:slf4j-api:${slf4j_version}") { transitive = false }

    //other
    shadow("io.github.kostaskougios:cloning:${cloning_version}") { transitive = false }
}

shadowJar {
    //relocate shaded dependencies to the shadow package to prevent library conflicts
    relocate 'com.rits', "${shadow_package}.com.rits"
    relocate 'com.sedmelluq', "${shadow_package}.com.sedmelluq"
    relocate 'net.sourceforge.jaad', "${shadow_package}.net.sourceforge.jaad"
    relocate 'org.mozilla', "${shadow_package}.org.mozilla"
    configurations = [project.configurations.shadow]
    setArchiveClassifier('')
    exclude '**/*.java'
}

jar {
    manifest {
        attributes([
                "Implementation-Title": project.name,
                'TILMultiversionMods': mod_entrypoint
        ])
    }
}

tasks.assemble.dependsOn('shadowJar')

allprojects {
    group = base_package
    version = mod_version

    repositories {
        mavenCentral()
        maven {
            name = 'JitPack'
            url = uri('https://jitpack.io')
        }
        maven {
            name = 'M2'
            url = uri('https://m2.dv8tion.net/releases')
        }
        flatDir {
            dirs "$rootProject.projectDir/libs"
        }
    }

    java {
        archivesBaseName = mod_id
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }
}

subprojects {
    plugins.apply('idea')
    plugins.apply('java')
    plugins.apply('java-library')

    dependencies {
        annotationProcessor("org.projectlombok:lombok:${lombok_version}")
        compileOnly("org.projectlombok:lombok:${lombok_version}")
    }
}